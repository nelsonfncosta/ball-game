{"version":3,"sources":["webpack:///./src/styles.css","webpack:///./src/App.jsx","webpack:///./src/drawUtils.js","webpack:///./src/index.jsx"],"names":["module","exports","WIDTH","HEIGHT","ballPosX","ballPosY","dx","dy","goLeft","goRight","paddle","x","y","width","PADDLE_WIDTH","height","BRICK_SETTINGS","brickRowCount","brickColumnCount","brickWidth","brickPadding","brickHeight","brickOffsetTop","brickOffsetLeft","color","bricks","c","r","hits","collision","forEach","columns","brick","hitBrick","draw","ctx","update","clearRect","clear","beginPath","rect","fillStyle","fill","closePath","drawPaddle","arc","Math","PI","drawBall","config","drawBrick","drawBricks","document","location","reload","ref","requestAnimationFrame","App","useRef","drawRef","updateDrawRef","useCallback","request","current","handleKeyDown","e","key","handleKeyUp","handleMouseMove","relativeX","clientX","offsetLeft","useEffect","canvas","focus","getContext","cancelAnimationFrame","className","id","tabIndex","style","onKeyDown","onKeyUp","onMouseMove","ReactDOM","render","getElementById"],"mappings":"2EACAA,EAAOC,QAAU,CAAC,OAAS,mB,0FCgD3B,I,oBA7CMC,EAAQ,IACRC,EAAS,IAQXC,EAAWF,IACXG,EAAWF,IAGXG,EADe,EAEfC,GAFe,EAIfC,GAAS,EACTC,GAAU,EAERC,EAAS,CACbC,EAAG,MACHC,EAAGT,IACHU,MAAOC,IACPC,OApBoB,IA4BhBC,EAAiB,CACrBC,cAJiB,EAKjBC,iBAJoB,EAKpBC,WARkB,GASlBC,aARoB,GASpBC,YAAa,GACbC,eAAgB,GAChBC,gBAAiB,IACjBC,MAAO,WAGHC,EAAS,GAGNC,EAAI,EAAGA,EAAIV,EAAeE,iBAAkBQ,GAAK,EAAG,CAC3DD,EAAOC,GAAK,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAeC,cAAeU,GAAK,EACrDF,EAAOC,GAAGC,GAAK,CACbhB,EACEe,GAAKV,EAAeG,WAAaH,EAAeI,cAChDJ,EAAeO,gBACjBX,EACEe,GAAKX,EAAeK,YAAcL,EAAeI,cACjDJ,EAAeM,eACjBM,KAAM,GA4CZ,SAASC,IACPJ,EAAOK,SAAQ,CAACC,EAASL,KACvBK,EAAQD,SAAQ,CAACE,EAAOL,KAEpBvB,EAAW4B,EAAMrB,GACjBP,EAAW4B,EAAMrB,EAAIK,EAAeG,YACpCd,EAAW2B,EAAMpB,GACjBP,EAAW2B,EAAMpB,EAAII,EAAeK,aAEjB,IAAfW,EAAMJ,OACRrB,GAAMA,EAbhB,SAAkBmB,EAAGC,GACnBF,EAAOC,GAAGC,GAAGC,MAAQ,EAabK,CAASP,EAAGC,UAOtB,SAASO,EAAKC,EAAKC,ICzHZ,SAAeD,EAAKtB,EAAOE,GAChCoB,EAAIE,UAAU,EAAG,EAAGxB,EAAOE,GDyH3BuB,CAAMH,EAAKjC,EAAOC,GC9Gb,SAAoBgC,EAApB,GAAkD,IAAzB,EAAExB,EAAF,EAAKC,EAAL,MAAQC,EAAR,OAAeE,GAAU,EACvDoB,EAAII,YACJJ,EAAIK,KAAK7B,EAAGC,EAAGC,EAAOE,GACtBoB,EAAIM,UAAY,UAChBN,EAAIO,OACJP,EAAIQ,YD2GJC,CAAWT,EAAKzB,GCxHX,SAAkByB,EAAKxB,EAAGC,EAAGe,GAClCQ,EAAII,YACJJ,EAAIU,IAAIlC,EAAGC,EAAGe,EAAG,EAAa,EAAVmB,KAAKC,IACzBZ,EAAIM,UAAY,UAChBN,EAAIO,OACJP,EAAIQ,YDoHJK,CAASb,EAAK/B,EAAUC,EAlHN,ICiBb,SAAoB8B,EAAKc,EAAQxB,GACtCA,EAAOK,SAAQC,IACbA,EAAQD,SAAQE,IACK,IAAfA,EAAMJ,MAXT,SAAmBO,EAAKc,EAAQjB,GACrCG,EAAII,YACJJ,EAAIK,KAAKR,EAAMrB,EAAGqB,EAAMpB,EAAGqC,EAAO9B,WAAY8B,EAAO5B,aACrDc,EAAIM,UAAYQ,EAAOzB,MACvBW,EAAIO,OACJP,EAAIQ,YAOEO,CAAUf,EAAKc,EAAQjB,SD8F7BmB,CAAWhB,EAAKnB,EAAgBS,GA7D5BpB,EAAWE,EAtDG,GAuDhBA,GAAMA,EACGF,EAAWE,EAAKJ,MACrBC,EAAWM,EAAOC,GAAKP,EAAWM,EAAOC,EAAID,EAAOG,MACtDN,GAAMA,EAEN6C,SAASC,SAASC,WAIlBlD,EAAWE,EAAKJ,KAAuBE,EAAWE,EAhEpC,MAiEhBA,GAAMA,GAGRF,GAAYE,EACZD,GAAYE,EAIRE,IACFC,EAAOC,GA5EU,EA8EbD,EAAOC,EAAID,EAAOG,MAAQX,IAC5BQ,EAAOC,EAAIT,EAAQQ,EAAOG,QAI1BL,IACFE,EAAOC,GApFU,EAqFbD,EAAOC,EAAI,IACbD,EAAOC,EAAI,IAqCfkB,IAEA,IAAM0B,EAAMC,uBAAsB,IAAMtB,EAAKC,EAAKC,KAClDA,EAAOmB,GAGM,SAASE,IACtB,IAAMF,EAAMG,mBACNC,EAAUD,mBAEVE,EAAgBC,uBACpBC,IACEH,EAAQI,QAAUD,IAEpB,CAACH,IAGGK,EAAgBH,uBAAYI,IAClB,UAAVA,EAAEC,KAA6B,eAAVD,EAAEC,IACzBzD,GAAU,EACS,SAAVwD,EAAEC,KAA4B,cAAVD,EAAEC,MAC/B1D,GAAS,KAEV,IAEG2D,EAAcN,uBAAYI,IAChB,UAAVA,EAAEC,KAA6B,eAAVD,EAAEC,MACzBzD,GAAU,GAEE,SAAVwD,EAAEC,KAA4B,cAAVD,EAAEC,MACxB1D,GAAS,KAEV,IAEG4D,EAAkBP,uBAAYI,IAClC,IAAMI,EAAYJ,EAAEK,QAAUf,EAAIQ,QAAQQ,WAEtCF,EAAY,GAAKA,EAAYnE,IAC/BQ,EAAOC,EAAI0D,EAAY3D,EAAOG,MAAQ,KAEvC,IAWH,OATA2D,qBAAU,KACR,IAAMC,EAASlB,EAAIQ,QAKnB,OAJAU,EAAOC,QAGPxC,EAFYuC,EAAOE,WAAW,MAEpBf,GACH,IAAMgB,qBAAqBjB,EAAQI,WACzC,IAGD,WAAKc,UAAU,YAAf,EACE,4BACEC,GAAG,WACHC,SAAU,EACVF,UAAWG,IAAMP,OACjBlB,IAAKA,EACL1C,MAAOX,EACPa,OAAQZ,EACR8E,UAAWjB,EACXkB,QAASf,EACTgB,YAAaf,KE9LrBgB,IAASC,OAAO,IAAC5B,EAAD,IAASL,SAASkC,eAAe,U","file":"js/main.591526aa81c0b2359c4b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"canvas___1krxf\"};","import React, { useEffect, useRef, useCallback } from 'react';\nimport { clear, drawBall, drawBricks, drawPaddle } from './drawUtils';\nimport style from './styles.css';\n\nconst WIDTH = 1000;\nconst HEIGHT = 600;\n\nconst PADDLE_HEIGHT = 10;\nconst PADDLE_WIDTH = 75;\nconst PADDLE_SPEED = 7;\n\nconst BALL_RADIUS = 10;\n\nlet ballPosX = WIDTH / 2;\nlet ballPosY = HEIGHT - 30;\n\nconst BALL_SPEED = 8;\nlet dx = BALL_SPEED;\nlet dy = -BALL_SPEED;\n\nlet goLeft = false;\nlet goRight = false;\n\nconst paddle = {\n  x: (WIDTH - PADDLE_WIDTH) / 2,\n  y: HEIGHT - PADDLE_HEIGHT,\n  width: PADDLE_WIDTH * 2,\n  height: PADDLE_HEIGHT,\n};\n\nconst BRICK_WIDTH = 75;\nconst BRICK_PADDING = 10;\nconst BRICK_ROWS = 3;\nconst BRICK_COLUMNS = 8;\n\nconst BRICK_SETTINGS = {\n  brickRowCount: BRICK_ROWS,\n  brickColumnCount: BRICK_COLUMNS,\n  brickWidth: BRICK_WIDTH,\n  brickPadding: BRICK_PADDING,\n  brickHeight: 20,\n  brickOffsetTop: 60,\n  brickOffsetLeft: (WIDTH - (BRICK_WIDTH + BRICK_PADDING) * BRICK_COLUMNS) / 2,\n  color: '#0095DD',\n};\n\nconst bricks = [];\n\n// initialize the bricks\nfor (let c = 0; c < BRICK_SETTINGS.brickColumnCount; c += 1) {\n  bricks[c] = [];\n  for (let r = 0; r < BRICK_SETTINGS.brickRowCount; r += 1) {\n    bricks[c][r] = {\n      x:\n        c * (BRICK_SETTINGS.brickWidth + BRICK_SETTINGS.brickPadding) +\n        BRICK_SETTINGS.brickOffsetLeft,\n      y:\n        r * (BRICK_SETTINGS.brickHeight + BRICK_SETTINGS.brickPadding) +\n        BRICK_SETTINGS.brickOffsetTop,\n      hits: 0,\n    };\n  }\n}\n\nfunction moveBall() {\n  if (ballPosY + dy < BALL_RADIUS) {\n    dy = -dy;\n  } else if (ballPosY + dy > HEIGHT - BALL_RADIUS) {\n    if (ballPosX > paddle.x && ballPosX < paddle.x + paddle.width) {\n      dy = -dy;\n    } else {\n      document.location.reload();\n    }\n  }\n\n  if (ballPosX + dx > WIDTH - BALL_RADIUS || ballPosX + dx < BALL_RADIUS) {\n    dx = -dx;\n  }\n\n  ballPosX += dx;\n  ballPosY += dy;\n}\n\nfunction movePaddle() {\n  if (goRight) {\n    paddle.x += PADDLE_SPEED;\n\n    if (paddle.x + paddle.width > WIDTH) {\n      paddle.x = WIDTH - paddle.width;\n    }\n  }\n\n  if (goLeft) {\n    paddle.x -= PADDLE_SPEED;\n    if (paddle.x < 0) {\n      paddle.x = 0;\n    }\n  }\n}\n\nfunction hitBrick(c, r) {\n  bricks[c][r].hits += 1;\n}\nfunction collision() {\n  bricks.forEach((columns, c) => {\n    columns.forEach((brick, r) => {\n      if (\n        ballPosX > brick.x &&\n        ballPosX < brick.x + BRICK_SETTINGS.brickWidth &&\n        ballPosY > brick.y &&\n        ballPosY < brick.y + BRICK_SETTINGS.brickHeight\n      ) {\n        if (brick.hits === 0) {\n          dy = -dy;\n          hitBrick(c, r);\n        }\n      }\n    });\n  });\n}\n\nfunction draw(ctx, update) {\n  clear(ctx, WIDTH, HEIGHT);\n\n  drawPaddle(ctx, paddle);\n  drawBall(ctx, ballPosX, ballPosY, BALL_RADIUS);\n  drawBricks(ctx, BRICK_SETTINGS, bricks);\n\n  moveBall();\n\n  movePaddle();\n\n  collision();\n\n  const ref = requestAnimationFrame(() => draw(ctx, update));\n  update(ref);\n}\n\nexport default function App() {\n  const ref = useRef();\n  const drawRef = useRef();\n\n  const updateDrawRef = useCallback(\n    request => {\n      drawRef.current = request;\n    },\n    [drawRef]\n  );\n\n  const handleKeyDown = useCallback(e => {\n    if (e.key === 'Right' || e.key === 'ArrowRight') {\n      goRight = true;\n    } else if (e.key === 'Left' || e.key === 'ArrowLeft') {\n      goLeft = true;\n    }\n  }, []);\n\n  const handleKeyUp = useCallback(e => {\n    if (e.key === 'Right' || e.key === 'ArrowRight') {\n      goRight = false;\n    }\n    if (e.key === 'Left' || e.key === 'ArrowLeft') {\n      goLeft = false;\n    }\n  }, []);\n\n  const handleMouseMove = useCallback(e => {\n    const relativeX = e.clientX - ref.current.offsetLeft;\n\n    if (relativeX > 0 && relativeX < WIDTH) {\n      paddle.x = relativeX - paddle.width / 2;\n    }\n  }, []);\n\n  useEffect(() => {\n    const canvas = ref.current;\n    canvas.focus();\n    const ctx = canvas.getContext('2d');\n\n    draw(ctx, updateDrawRef);\n    return () => cancelAnimationFrame(drawRef.current);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <canvas\n        id=\"myCanvas\"\n        tabIndex={0}\n        className={style.canvas}\n        ref={ref}\n        width={WIDTH}\n        height={HEIGHT}\n        onKeyDown={handleKeyDown}\n        onKeyUp={handleKeyUp}\n        onMouseMove={handleMouseMove}\n      />\n    </div>\n  );\n}\n","export function clear(ctx, width, height) {\n  ctx.clearRect(0, 0, width, height);\n}\n\nexport function drawBall(ctx, x, y, r) {\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, Math.PI * 2);\n  ctx.fillStyle = '#0095DD';\n  ctx.fill();\n  ctx.closePath();\n}\n\nexport function drawPaddle(ctx, { x, y, width, height }) {\n  ctx.beginPath();\n  ctx.rect(x, y, width, height);\n  ctx.fillStyle = '#0095DD';\n  ctx.fill();\n  ctx.closePath();\n}\n\nexport function drawBrick(ctx, config, brick) {\n  ctx.beginPath();\n  ctx.rect(brick.x, brick.y, config.brickWidth, config.brickHeight);\n  ctx.fillStyle = config.color;\n  ctx.fill();\n  ctx.closePath();\n}\n\nexport function drawBricks(ctx, config, bricks) {\n  bricks.forEach(columns => {\n    columns.forEach(brick => {\n      if (brick.hits === 0) {\n        drawBrick(ctx, config, brick);\n      }\n    });\n  });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}